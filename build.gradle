buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            url "${artifactory_contextUrl}/gradle-dev"
            credentials {
                username "${artifactory_user}"
                password "${artifactory_password}"
            }
            authentication {
                basic(BasicAuthentication)
            }
            metadataSources {
                mavenPom()
                artifact()
            }
        }
    }

    dependencies {
        classpath "com.dipien:semantic-version-gradle-plugin:2.0.0"
    }
}

plugins {
    id 'java'
    id 'maven-publish'
}

group = "org.release.test"
version = "1.2.0"

apply plugin: "com.dipien.semantic-version"

tasks.register("getReleaseVersion", {
    doLast {
        def releaseVersion = "${version}".substring(0, "${version}".lastIndexOf('.'))
        print(releaseVersion)
    }
})

tasks.register("getVersion", {
    doLast {
        print(project.version)
    }
})

tasks.register('prepareDistribution', Copy) {
    from(layout.projectDirectory) {
        exclude "build/**"
        exclude ".gradle/**"
        exclude "gradle/**"
        exclude ".vscode/**"
        exclude ".gitignore"
        exclude "gradle*"
        exclude "Jenkinsfile"
        include "*/**"
    }
    into layout.buildDirectory.dir("toArchive")
}

tasks.register('packageDistribution', Zip) {
    archiveFileName = "kong-portal-customization-${version}.zip"
    destinationDirectory = layout.buildDirectory.dir('dist')

    from layout.buildDirectory.dir("toArchive")
}

packageDistribution.dependsOn prepareDistribution

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact source: packageDistribution, extension: 'zip'
        }
    }
    repositories {
        maven {
            credentials {
                username artifactory_user
                password artifactory_password
            }
            url = "${artifactory_contextUrl}/gradle-dev-local"
        }
    }
}
